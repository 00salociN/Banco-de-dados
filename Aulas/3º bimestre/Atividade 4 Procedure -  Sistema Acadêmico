create table alunos (
ra int auto_increment,
nomealun varchar(255) not null,
matricula varchar(255) not null,
cidade varchar(100) not null,
fkturma int not null,
constraint pkra primary key(ra),
constraint fkturma foreign key(fkturma) references turmas(idturma)
);

create table professores (
profid int auto_increment,
nomeprof varchar(255),
gmail varchar(255),
constraint pkidprof primary key(profid)
);

create table cursos (
idcurso int auto_increment,
nomecurso varchar(255),
fkprof int not null,
constraint pkcurso primary key(idcurso),
constraint fkprof foreign key(fkprof) references professores (profid)
);

create table professor_curso (
fkprofessor int not null,
fkcurso int not null,
primary key (fkprofessor, fkcurso),
constraint fkprofcur foreign key(fkprofessor) references professores(profid),
constraint fkcur foreign key(fkcurso) references cursos(idcurso)
);

create table disciplinas (
discid int auto_increment,
nomedisc varchar(255) not null,
constraint pkdisc primary key(discid)
);

create table professor_disciplina (
fkprofessor int not null,
fkdisc int not null,
primary key (fkprofessor, fkdisc),
constraint fkprofdisc foreign key(fkprofessor) references professores(profid),
constraint fkdisc foreign key(fkdisc) references disciplinas(discid)
);

create table turmas (
idturma int auto_increment,
serie char(1) not null,
ano char(4) not null,
qntd_alunos char(2) not null,
constraint pkturma primary key(idturma)
);


create table historico_escolar (
histid int auto_increment,
iddisc int not null,
fkraluno int not null,
fkturma int not null,
semestre char(1) not null,
media decimal(4,2) not null,
faltas char(3) not null,
situacao varchar(255) not null,
ano char(4) not null,
constraint pkhistorico primary key(histid),
constraint fkaluno foreign key(fkraluno) references alunos(ra),
constraint fkdischist foreign key (iddisc) references disciplinas(discid),
constraint fkturmahistorico foreign key(fkturma) references turmas(idturma)
);

delimiter //
create procedure Proc_BoletimAluno (
in matricula varchar(255)
) begin
select 
iddisc,
semestre,
media,
faltas,
situacao
from historico_escolar;
end //

delimiter //
create procedure Proc_ProfessoresCurso (
in idcurso int
)
begin 
professores.nome,
professores.gmail,
disciplinas.nomedisc
from professor_disciplina
join professores on professor_disciplina.fkprofessor = professores.profid
join disciplinas on professor_disciplina.fkdisc = disciplinas.discid;
end //
